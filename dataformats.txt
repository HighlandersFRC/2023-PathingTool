Path JSON Format
{
    "meta_data":{
        "path_name": str,
        "sample_rate": float
    },
    "commands": [
        {
            "trigger_type": str,
            "trigger": any,
            "command": {
                "type": str,
                "args": [
                    any
                ]
            },
        },
        ...
    ],
    "key_points": [
        {
            "index": int,
            "time": float,
            "delta_time": float,
            "x": float,
            "y": float,
            "angle": float
            "velocity_magnitude": float,
            "velocity_theta": float
        },
        ...
    ],
    "sampled_points": [
        {
            "time": float,
            "x": float,
            "y": float,
            "angle": float
        },
        ...
    ]
}

Command JSON Format
{
    "trigger_type": (
        "time",
        "position"
    ),
    "trigger": (
        float time,
        [float x, float y] position
    ),
    "command": {
        "type": (
            "angle_arm",
            "extend_arm",
            "auto_balance"
        ),
        "args": (
            if type is angle_arm: [float degrees],
            if type is extend arm: [float length],
            if type is auto_balance: []
        )
    }
}

Odometry Recording CSV Format
time (float), x (float), y (float), theta (float)